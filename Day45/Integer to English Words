Convert a non-negative integer num to its English words representation.

Example 1:
Input: num = 123
Output: "One Hundred Twenty Three"
Example 2:

Input: num = 12345
Output: "Twelve Thousand Three Hundred Forty Five"
Example 3:

Input: num = 1234567
Output: "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"
 
Constraints:
0 <= num <= 231 - 1
-------------------------------------------------------------------------------
C++ Solution

class Solution {
private:
    const vector<string> lessThan20 = {
        "Zero", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine", 
        "Ten", "Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen", "Sixteen", 
        "Seventeen", "Eighteen", "Nineteen"
    };
    
    const vector<string> tens = {
        "", "", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy", "Eighty", "Ninety"
    };
    
    const vector<string> thousands = {
        "", "Thousand", "Million", "Billion"
    };

    string numberToWordsLessThan1000(int num) {
        if (num == 0) return "";
        if (num < 20) return lessThan20[num];
        if (num < 100) return tens[num / 10] + (num % 10 ? " " + lessThan20[num % 10] : "");
        return lessThan20[num / 100] + " Hundred" + (num % 100 ? " " + numberToWordsLessThan1000(num % 100) : "");
    }

public:
    string numberToWords(int num) {
        if (num == 0) return "Zero";
        
        string result = "";
        int i = 0;
        
        while (num > 0) {
            if (num % 1000 != 0) {
                result = numberToWordsLessThan1000(num % 1000) + (thousands[i].empty() ? "" : " " + thousands[i]) + (result.empty() ? "" : " " + result);
            }
            num /= 1000;
            ++i;
        }
        
        return result;
    }
};

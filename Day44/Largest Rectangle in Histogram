Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.

Example 1:
Input: heights = [2,1,5,6,2,3]
Output: 10
Explanation: The above is a histogram where width of each bar is 1.
The largest rectangle is shown in the red area, which has an area = 10 units.
Example 2:

Input: heights = [2,4]
Output: 4
 
Constraints:
1 <= heights.length <= 105
0 <= heights[i] <= 104
--------------------------------------------------------------------------------
C++ Solution

class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int max_area = 0;
        stack<int> indices;  
        int n = heights.size();

        for (int i = 0; i < n; ++i) {
           
            while (!indices.empty() && heights[i] < heights[indices.top()]) {
                int height = heights[indices.top()];
                indices.pop();
                int width = indices.empty() ? i : i - indices.top() - 1;
                max_area = max(max_area, height * width);
            }
            indices.push(i);
        }

        while (!indices.empty()) {
            int height = heights[indices.top()];
            indices.pop();
            int width = indices.empty() ? n : n - indices.top() - 1;
            max_area = max(max_area, height * width);
        }

        return max_area;
    }
};

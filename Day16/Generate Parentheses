Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

Example 1:
Input: n = 3
Output: ["((()))","(()())","(())()","()(())","()()()"]
Example 2:

Input: n = 1
Output: ["()"]
 
Constraints:
1 <= n <= 8
-------------------------------------------------------------------
C++ Solution

class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<string> result;
        generate(n, n, "", result);
        return result;
    }
    
private:
    void generate(int left, int right, string current, vector<string>& result) {
        if (left == 0 && right == 0) {
            result.push_back(current);
            return;
        }

        if (left > 0) {
            generate(left - 1, right, current + '(', result);
        }

        if (right > left) {
            generate(left, right - 1, current + ')', result);
        }
    }
};
